{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/rsham/JODDB/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Card({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        'bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        '@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn('leading-none font-semibold', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        'col-start-2 row-span-2 row-start-1 self-start justify-self-end',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn('px-6', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn('flex items-center px-6 [.border-t]:pt-6', className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///home/rsham/JODDB/frontend/components/role-selection.tsx"],"sourcesContent":["\"use client\"\n\nimport type React from \"react\"\n\nimport { useAuth, type UserRole } from \"@/lib/auth-context\"\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Factory, FlaskConical, CheckCircle2, ClipboardList, Calendar } from \"lucide-react\"\nimport { useRouter } from \"next/navigation\"\nimport { cn } from \"@/lib/utils\"\nimport { Badge } from \"@/components/ui/badge\"\n\nconst roleConfig: Record<\n  UserRole,\n  {\n    label: string\n    icon: React.ComponentType<{ className?: string }>\n    color: string\n    bgColor: string\n    description: string\n    badge?: string\n  }\n> = {\n  \"production-worker\": {\n    label: \"Production\",\n    icon: Factory,\n    color: \"text-emerald-500\",\n    bgColor: \"bg-emerald-500/10 hover:bg-emerald-500/20 border-emerald-500/20\",\n    description: \"Assembly line and manufacturing tasks\",\n  },\n  tester: {\n    label: \"Testing\",\n    icon: FlaskConical,\n    color: \"text-blue-500\",\n    bgColor: \"bg-blue-500/10 hover:bg-blue-500/20 border-blue-500/20\",\n    description: \"Quality testing and validation\",\n  },\n  quality: {\n    label: \"Quality\",\n    icon: CheckCircle2,\n    color: \"text-purple-500\",\n    bgColor: \"bg-purple-500/10 hover:bg-purple-500/20 border-purple-500/20\",\n    description: \"Quality assurance and inspection\",\n  },\n  \"production-supervisor\": {\n    label: \"Production Supervisor\",\n    icon: ClipboardList,\n    color: \"text-emerald-500\",\n    bgColor: \"bg-emerald-500/10 hover:bg-emerald-500/20 border-emerald-500/20\",\n    description: \"Oversee production department tasks\",\n    badge: \"Production\",\n  },\n  \"test-supervisor\": {\n    label: \"Test Supervisor\",\n    icon: ClipboardList,\n    color: \"text-blue-500\",\n    bgColor: \"bg-blue-500/10 hover:bg-blue-500/20 border-blue-500/20\",\n    description: \"Oversee testing department tasks\",\n    badge: \"Test\",\n  },\n  \"quality-supervisor\": {\n    label: \"Quality Supervisor\",\n    icon: ClipboardList,\n    color: \"text-purple-500\",\n    bgColor: \"bg-purple-500/10 hover:bg-purple-500/20 border-purple-500/20\",\n    description: \"Oversee quality department tasks\",\n    badge: \"Quality\",\n  },\n  \"engineer-planner\": {\n    label: \"Engineer Planner\",\n    icon: Calendar,\n    color: \"text-cyan-500\",\n    bgColor: \"bg-cyan-500/10 hover:bg-cyan-500/20 border-cyan-500/20\",\n    description: \"Job planning and resource allocation\",\n  },\n}\n\nexport function RoleSelection() {\n  const { user, selectRole } = useAuth()\n  const router = useRouter()\n\n  if (!user) return null\n\n  const handleRoleSelect = (role: UserRole) => {\n    selectRole(role)\n    router.push(\"/dashboard\")\n  }\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-4\">\n      <Card className=\"w-full max-w-3xl\">\n        <CardHeader className=\"text-center\">\n          <CardTitle className=\"text-2xl font-bold\">Select Your Role</CardTitle>\n          <CardDescription>Welcome back, {user.name}! Choose a role to continue</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n            {user.availableRoles.map((role) => {\n              const config = roleConfig[role]\n              const Icon = config.icon\n              return (\n                <button\n                  key={role}\n                  onClick={() => handleRoleSelect(role)}\n                  className={cn(\n                    \"p-6 rounded-lg border-2 transition-all duration-200 text-left\",\n                    \"hover:scale-105 hover:shadow-lg\",\n                    config.bgColor,\n                  )}\n                >\n                  <div className=\"flex flex-col items-center text-center space-y-3\">\n                    <div className={cn(\"p-3 rounded-full bg-background/50\", config.color)}>\n                      <Icon className=\"h-8 w-8\" />\n                    </div>\n                    <div>\n                      <div className=\"flex items-center justify-center gap-2\">\n                        <h3 className=\"font-semibold text-lg\">{config.label}</h3>\n                        {config.badge && (\n                          <Badge variant=\"secondary\" className=\"text-xs\">\n                            {config.badge}\n                          </Badge>\n                        )}\n                      </div>\n                      <p className=\"text-sm text-muted-foreground mt-1\">{config.description}</p>\n                    </div>\n                  </div>\n                </button>\n              )\n            })}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;AATA;;;;;;;AAWA,MAAM,aAUF;IACF,qBAAqB;QACnB,OAAO;QACP,MAAM,0SAAO;QACb,OAAO;QACP,SAAS;QACT,aAAa;IACf;IACA,QAAQ;QACN,OAAO;QACP,MAAM,6TAAY;QAClB,OAAO;QACP,SAAS;QACT,aAAa;IACf;IACA,SAAS;QACP,OAAO;QACP,MAAM,4TAAY;QAClB,OAAO;QACP,SAAS;QACT,aAAa;IACf;IACA,yBAAyB;QACvB,OAAO;QACP,MAAM,gUAAa;QACnB,OAAO;QACP,SAAS;QACT,aAAa;QACb,OAAO;IACT;IACA,mBAAmB;QACjB,OAAO;QACP,MAAM,gUAAa;QACnB,OAAO;QACP,SAAS;QACT,aAAa;QACb,OAAO;IACT;IACA,sBAAsB;QACpB,OAAO;QACP,MAAM,gUAAa;QACnB,OAAO;QACP,SAAS;QACT,aAAa;QACb,OAAO;IACT;IACA,oBAAoB;QAClB,OAAO;QACP,MAAM,6SAAQ;QACd,OAAO;QACP,SAAS;QACT,aAAa;IACf;AACF;AAEO,SAAS;;IACd,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,IAAA,qIAAO;IACpC,MAAM,SAAS,IAAA,iRAAS;IAExB,IAAI,CAAC,MAAM,OAAO;IAElB,MAAM,mBAAmB,CAAC;QACxB,WAAW;QACX,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,4TAAC;QAAI,WAAU;kBACb,cAAA,4TAAC,oIAAI;YAAC,WAAU;;8BACd,4TAAC,0IAAU;oBAAC,WAAU;;sCACpB,4TAAC,yIAAS;4BAAC,WAAU;sCAAqB;;;;;;sCAC1C,4TAAC,+IAAe;;gCAAC;gCAAe,KAAK,IAAI;gCAAC;;;;;;;;;;;;;8BAE5C,4TAAC,2IAAW;8BACV,cAAA,4TAAC;wBAAI,WAAU;kCACZ,KAAK,cAAc,CAAC,GAAG,CAAC,CAAC;4BACxB,MAAM,SAAS,UAAU,CAAC,KAAK;4BAC/B,MAAM,OAAO,OAAO,IAAI;4BACxB,qBACE,4TAAC;gCAEC,SAAS,IAAM,iBAAiB;gCAChC,WAAW,IAAA,qHAAE,EACX,iEACA,mCACA,OAAO,OAAO;0CAGhB,cAAA,4TAAC;oCAAI,WAAU;;sDACb,4TAAC;4CAAI,WAAW,IAAA,qHAAE,EAAC,qCAAqC,OAAO,KAAK;sDAClE,cAAA,4TAAC;gDAAK,WAAU;;;;;;;;;;;sDAElB,4TAAC;;8DACC,4TAAC;oDAAI,WAAU;;sEACb,4TAAC;4DAAG,WAAU;sEAAyB,OAAO,KAAK;;;;;;wDAClD,OAAO,KAAK,kBACX,4TAAC,sIAAK;4DAAC,SAAQ;4DAAY,WAAU;sEAClC,OAAO,KAAK;;;;;;;;;;;;8DAInB,4TAAC;oDAAE,WAAU;8DAAsC,OAAO,WAAW;;;;;;;;;;;;;;;;;;+BArBpE;;;;;wBA0BX;;;;;;;;;;;;;;;;;;;;;;AAMZ;GAzDgB;;QACe,qIAAO;QACrB,iRAAS;;;KAFV","debugId":null}},
    {"offset": {"line": 362, "column": 0}, "map": {"version":3,"sources":["file:///home/rsham/JODDB/frontend/app/select-role/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useAuth } from \"@/lib/auth-context\"\nimport { RoleSelection } from \"@/components/role-selection\"\nimport { useRouter } from \"next/navigation\"\nimport { useEffect } from \"react\"\n\nexport default function SelectRolePage() {\n  const { user, isLoading } = useAuth()\n  const router = useRouter()\n\n  useEffect(() => {\n    if (!isLoading) {\n      if (!user) {\n        router.push(\"/\")\n      } else if (user.currentRole) {\n        router.push(\"/dashboard\")\n      }\n    }\n  }, [user, isLoading, router])\n\n  if (isLoading || !user || user.currentRole) {\n    return null\n  }\n\n  return <RoleSelection />\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;;;AALA;;;;;AAOe,SAAS;;IACtB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,IAAA,qIAAO;IACnC,MAAM,SAAS,IAAA,iRAAS;IAExB,IAAA,ySAAS;oCAAC;YACR,IAAI,CAAC,WAAW;gBACd,IAAI,CAAC,MAAM;oBACT,OAAO,IAAI,CAAC;gBACd,OAAO,IAAI,KAAK,WAAW,EAAE;oBAC3B,OAAO,IAAI,CAAC;gBACd;YACF;QACF;mCAAG;QAAC;QAAM;QAAW;KAAO;IAE5B,IAAI,aAAa,CAAC,QAAQ,KAAK,WAAW,EAAE;QAC1C,OAAO;IACT;IAEA,qBAAO,4TAAC,oJAAa;;;;;AACvB;GAnBwB;;QACM,qIAAO;QACpB,iRAAS;;;KAFF","debugId":null}}]
}