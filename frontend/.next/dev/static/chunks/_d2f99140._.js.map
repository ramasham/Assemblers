{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/rsham/ass/frontend/components/ui/card.tsx"],"sourcesContent":["import * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Card({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        'bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        '@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-2 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn('leading-none font-semibold', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        'col-start-2 row-span-2 row-start-1 self-start justify-self-end',\n        className,\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn('px-6', className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn('flex items-center px-6 [.border-t]:pt-6', className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,4JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,4TAAC;QACC,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///home/rsham/ass/frontend/components/ui/select.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as SelectPrimitive from '@radix-ui/react-select'\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = 'default',\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: 'sm' | 'default'\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = 'popper',\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          'bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md',\n          position === 'popper' &&\n            'data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1',\n          className,\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            'p-1',\n            position === 'popper' &&\n              'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1',\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn('text-muted-foreground px-2 py-1.5 text-xs', className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className,\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn('bg-border pointer-events-none -mx-1 my-1 h-px', className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className,\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        'flex cursor-default items-center justify-center py-1',\n        className,\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AAAA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,4TAAC,iYAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,4TAAC,kYAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,4TAAC,kYAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,OAAO,SAAS,EAChB,QAAQ,EACR,GAAG,OAGJ;IACC,qBACE,4TAAC,oYAAuB;QACtB,aAAU;QACV,aAAW;QACX,WAAW,IAAA,qHAAE,EACX,gzBACA;QAED,GAAG,KAAK;;YAER;0BACD,4TAAC,iYAAoB;gBAAC,OAAO;0BAC3B,cAAA,4TAAC,kUAAe;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAInC;MAxBS;AA0BT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,WAAW,QAAQ,EACnB,GAAG,OACkD;IACrD,qBACE,4TAAC,mYAAsB;kBACrB,cAAA,4TAAC,oYAAuB;YACtB,aAAU;YACV,WAAW,IAAA,qHAAE,EACX,ijBACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,4TAAC;;;;;8BACD,4TAAC,qYAAwB;oBACvB,WAAW,IAAA,qHAAE,EACX,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,4TAAC;;;;;;;;;;;;;;;;AAIT;MAjCS;AAmCT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,4TAAC,kYAAqB;QACpB,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,WAAW,EAClB,SAAS,EACT,QAAQ,EACR,GAAG,OAC+C;IAClD,qBACE,4TAAC,iYAAoB;QACnB,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,6aACA;QAED,GAAG,KAAK;;0BAET,4TAAC;gBAAK,WAAU;0BACd,cAAA,4TAAC,0YAA6B;8BAC5B,cAAA,4TAAC,4SAAS;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAGzB,4TAAC,qYAAwB;0BAAE;;;;;;;;;;;;AAGjC;MAtBS;AAwBT,SAAS,gBAAgB,EACvB,SAAS,EACT,GAAG,OACoD;IACvD,qBACE,4TAAC,sYAAyB;QACxB,aAAU;QACV,WAAW,IAAA,qHAAE,EAAC,iDAAiD;QAC9D,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,qBAAqB,EAC5B,SAAS,EACT,GAAG,OACyD;IAC5D,qBACE,4TAAC,2YAA8B;QAC7B,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,4TAAC,4TAAa;YAAC,WAAU;;;;;;;;;;;AAG/B;MAhBS;AAkBT,SAAS,uBAAuB,EAC9B,SAAS,EACT,GAAG,OAC2D;IAC9D,qBACE,4TAAC,6YAAgC;QAC/B,aAAU;QACV,WAAW,IAAA,qHAAE,EACX,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,4TAAC,kUAAe;YAAC,WAAU;;;;;;;;;;;AAGjC;MAhBS","debugId":null}},
    {"offset": {"line": 381, "column": 0}, "map": {"version":3,"sources":["file:///home/rsham/ass/frontend/app/calendar/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { useState } from \"react\"\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { Button } from \"@/components/ui/button\"\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\"\nimport { mockCalendarEvents, type CalendarEvent } from \"@/lib/mock-data\"\nimport { ChevronLeft, ChevronRight, CalendarIcon } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\n\nexport default function CalendarPage() {\n  const [currentDate, setCurrentDate] = useState(new Date())\n  const [view, setView] = useState<\"month\" | \"year\">(\"month\")\n  const [selectedDate, setSelectedDate] = useState<Date | null>(null)\n\n  const months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\",\n  ]\n\n  const getEventColor = (type: CalendarEvent[\"type\"]) => {\n    switch (type) {\n      case \"holiday\":\n        return \"bg-gray-500 text-white\"\n      case \"meeting\":\n        return \"bg-blue-500 text-white\"\n      case \"deadline\":\n        return \"bg-[#FF4D8D] text-white\"\n      default:\n        return \"bg-gray-500 text-white\"\n    }\n  }\n\n  const getEventsForDate = (date: Date) => {\n    const dateString = date.toISOString().split(\"T\")[0]\n    return mockCalendarEvents.filter((event) => event.date === dateString)\n  }\n\n  const getDaysInMonth = (date: Date) => {\n    const year = date.getFullYear()\n    const month = date.getMonth()\n    const firstDay = new Date(year, month, 1)\n    const lastDay = new Date(year, month + 1, 0)\n    const daysInMonth = lastDay.getDate()\n    const startingDayOfWeek = firstDay.getDay()\n\n    const days: (Date | null)[] = []\n\n    // Add empty cells for days before the first day of the month\n    for (let i = 0; i < startingDayOfWeek; i++) {\n      days.push(null)\n    }\n\n    // Add all days of the month\n    for (let day = 1; day <= daysInMonth; day++) {\n      days.push(new Date(year, month, day))\n    }\n\n    return days\n  }\n\n  const navigateMonth = (direction: \"prev\" | \"next\") => {\n    setCurrentDate((prev) => {\n      const newDate = new Date(prev)\n      if (direction === \"prev\") {\n        newDate.setMonth(newDate.getMonth() - 1)\n      } else {\n        newDate.setMonth(newDate.getMonth() + 1)\n      }\n      return newDate\n    })\n  }\n\n  const navigateYear = (direction: \"prev\" | \"next\") => {\n    setCurrentDate((prev) => {\n      const newDate = new Date(prev)\n      if (direction === \"prev\") {\n        newDate.setFullYear(newDate.getFullYear() - 1)\n      } else {\n        newDate.setFullYear(newDate.getFullYear() + 1)\n      }\n      return newDate\n    })\n  }\n\n  const isToday = (date: Date) => {\n    const today = new Date()\n    return (\n      date.getDate() === today.getDate() &&\n      date.getMonth() === today.getMonth() &&\n      date.getFullYear() === today.getFullYear()\n    )\n  }\n\n  const selectedDateEvents = selectedDate ? getEventsForDate(selectedDate) : []\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Calendar</h2>\n          <p className=\"text-muted-foreground\">View holidays, meetings, and deadlines</p>\n        </div>\n        <div className=\"flex items-center gap-2\">\n          <Select value={view} onValueChange={(value: any) => setView(value)}>\n            <SelectTrigger className=\"w-[140px]\">\n              <SelectValue />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"month\">Month View</SelectItem>\n              <SelectItem value=\"year\">Year View</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      {view === \"month\" ? (\n        <div className=\"grid gap-6 lg:grid-cols-3\">\n          <Card className=\"lg:col-span-2\">\n            <CardHeader>\n              <div className=\"flex items-center justify-between\">\n                <CardTitle className=\"text-2xl\">\n                  {months[currentDate.getMonth()]} {currentDate.getFullYear()}\n                </CardTitle>\n                <div className=\"flex items-center gap-2\">\n                  <Button variant=\"outline\" size=\"icon\" onClick={() => navigateMonth(\"prev\")}>\n                    <ChevronLeft className=\"h-4 w-4\" />\n                  </Button>\n                  <Button variant=\"outline\" size=\"sm\" onClick={() => setCurrentDate(new Date())}>\n                    Today\n                  </Button>\n                  <Button variant=\"outline\" size=\"icon\" onClick={() => navigateMonth(\"next\")}>\n                    <ChevronRight className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-7 gap-2\">\n                {[\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"].map((day) => (\n                  <div key={day} className=\"text-center text-sm font-medium text-muted-foreground p-2\">\n                    {day}\n                  </div>\n                ))}\n                {getDaysInMonth(currentDate).map((date, index) => {\n                  if (!date) {\n                    return <div key={`empty-${index}`} className=\"p-2\" />\n                  }\n\n                  const events = getEventsForDate(date)\n                  const isSelected =\n                    selectedDate &&\n                    date.getDate() === selectedDate.getDate() &&\n                    date.getMonth() === selectedDate.getMonth() &&\n                    date.getFullYear() === selectedDate.getFullYear()\n\n                  return (\n                    <button\n                      key={date.toISOString()}\n                      onClick={() => setSelectedDate(date)}\n                      className={cn(\n                        \"p-2 rounded-lg text-sm transition-colors min-h-[60px] flex flex-col items-start\",\n                        \"hover:bg-accent\",\n                        isToday(date) && \"bg-primary/10 font-bold border-2 border-primary\",\n                        isSelected && \"bg-accent\",\n                      )}\n                    >\n                      <span className={cn(\"mb-1\", isToday(date) && \"text-primary\")}>{date.getDate()}</span>\n                      <div className=\"flex flex-wrap gap-1\">\n                        {events.slice(0, 2).map((event) => (\n                          <div key={event.id} className={cn(\"h-1.5 w-1.5 rounded-full\", getEventColor(event.type))} />\n                        ))}\n                        {events.length > 2 && (\n                          <span className=\"text-xs text-muted-foreground\">+{events.length - 2}</span>\n                        )}\n                      </div>\n                    </button>\n                  )\n                })}\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>\n                {selectedDate\n                  ? selectedDate.toLocaleDateString(\"en-US\", { month: \"long\", day: \"numeric\", year: \"numeric\" })\n                  : \"Select a date\"}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              {selectedDateEvents.length === 0 ? (\n                <p className=\"text-sm text-muted-foreground\">No events on this day</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {selectedDateEvents.map((event) => (\n                    <div key={event.id} className=\"p-3 rounded-lg border bg-card space-y-1\">\n                      <div className=\"flex items-center gap-2\">\n                        <div className={cn(\"h-2 w-2 rounded-full\", getEventColor(event.type))} />\n                        <h4 className=\"font-semibold text-sm\">{event.title}</h4>\n                      </div>\n                      {event.description && <p className=\"text-xs text-muted-foreground pl-4\">{event.description}</p>}\n                      <Badge variant=\"secondary\" className=\"text-xs ml-4\">\n                        {event.type}\n                      </Badge>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      ) : (\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle className=\"text-2xl\">{currentDate.getFullYear()}</CardTitle>\n              <div className=\"flex items-center gap-2\">\n                <Button variant=\"outline\" size=\"icon\" onClick={() => navigateYear(\"prev\")}>\n                  <ChevronLeft className=\"h-4 w-4\" />\n                </Button>\n                <Button variant=\"outline\" size=\"sm\" onClick={() => setCurrentDate(new Date())}>\n                  This Year\n                </Button>\n                <Button variant=\"outline\" size=\"icon\" onClick={() => navigateYear(\"next\")}>\n                  <ChevronRight className=\"h-4 w-4\" />\n                </Button>\n              </div>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-3 gap-4\">\n              {months.map((month, index) => {\n                const monthDate = new Date(currentDate.getFullYear(), index, 1)\n                const monthEvents = mockCalendarEvents.filter((event) => {\n                  const eventDate = new Date(event.date)\n                  return eventDate.getMonth() === index && eventDate.getFullYear() === currentDate.getFullYear()\n                })\n\n                return (\n                  <button\n                    key={month}\n                    onClick={() => {\n                      setCurrentDate(monthDate)\n                      setView(\"month\")\n                    }}\n                    className=\"p-4 rounded-lg border bg-card hover:bg-accent transition-colors text-left\"\n                  >\n                    <h4 className=\"font-semibold mb-2\">{month}</h4>\n                    <div className=\"space-y-1\">\n                      {monthEvents.slice(0, 3).map((event) => (\n                        <div key={event.id} className=\"flex items-center gap-2\">\n                          <div className={cn(\"h-1.5 w-1.5 rounded-full\", getEventColor(event.type))} />\n                          <span className=\"text-xs text-muted-foreground truncate\">{event.title}</span>\n                        </div>\n                      ))}\n                      {monthEvents.length > 3 && (\n                        <span className=\"text-xs text-muted-foreground\">+{monthEvents.length - 3} more</span>\n                      )}\n                      {monthEvents.length === 0 && <span className=\"text-xs text-muted-foreground\">No events</span>}\n                    </div>\n                  </button>\n                )\n              })}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      <Card>\n        <CardHeader>\n          <CardTitle className=\"flex items-center gap-2\">\n            <CalendarIcon className=\"h-5 w-5\" />\n            Event Legend\n          </CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-wrap gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <div className=\"h-3 w-3 rounded-full bg-gray-500\" />\n              <span className=\"text-sm\">Holidays</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"h-3 w-3 rounded-full bg-blue-500\" />\n              <span className=\"text-sm\">Meetings</span>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <div className=\"h-3 w-3 rounded-full bg-[#FF4D8D]\" />\n              <span className=\"text-sm\">Deadlines</span>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AATA;;;;;;;;;AAWe,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,wSAAQ,EAAC,IAAI;IACnD,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,wSAAQ,EAAmB;IACnD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,wSAAQ,EAAc;IAE9D,MAAM,SAAS;QACb;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,MAAM,gBAAgB,CAAC;QACrB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT;gBACE,OAAO;QACX;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,aAAa,KAAK,WAAW,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE;QACnD,OAAO,4IAAkB,CAAC,MAAM,CAAC,CAAC,QAAU,MAAM,IAAI,KAAK;IAC7D;IAEA,MAAM,iBAAiB,CAAC;QACtB,MAAM,OAAO,KAAK,WAAW;QAC7B,MAAM,QAAQ,KAAK,QAAQ;QAC3B,MAAM,WAAW,IAAI,KAAK,MAAM,OAAO;QACvC,MAAM,UAAU,IAAI,KAAK,MAAM,QAAQ,GAAG;QAC1C,MAAM,cAAc,QAAQ,OAAO;QACnC,MAAM,oBAAoB,SAAS,MAAM;QAEzC,MAAM,OAAwB,EAAE;QAEhC,6DAA6D;QAC7D,IAAK,IAAI,IAAI,GAAG,IAAI,mBAAmB,IAAK;YAC1C,KAAK,IAAI,CAAC;QACZ;QAEA,4BAA4B;QAC5B,IAAK,IAAI,MAAM,GAAG,OAAO,aAAa,MAAO;YAC3C,KAAK,IAAI,CAAC,IAAI,KAAK,MAAM,OAAO;QAClC;QAEA,OAAO;IACT;IAEA,MAAM,gBAAgB,CAAC;QACrB,eAAe,CAAC;YACd,MAAM,UAAU,IAAI,KAAK;YACzB,IAAI,cAAc,QAAQ;gBACxB,QAAQ,QAAQ,CAAC,QAAQ,QAAQ,KAAK;YACxC,OAAO;gBACL,QAAQ,QAAQ,CAAC,QAAQ,QAAQ,KAAK;YACxC;YACA,OAAO;QACT;IACF;IAEA,MAAM,eAAe,CAAC;QACpB,eAAe,CAAC;YACd,MAAM,UAAU,IAAI,KAAK;YACzB,IAAI,cAAc,QAAQ;gBACxB,QAAQ,WAAW,CAAC,QAAQ,WAAW,KAAK;YAC9C,OAAO;gBACL,QAAQ,WAAW,CAAC,QAAQ,WAAW,KAAK;YAC9C;YACA,OAAO;QACT;IACF;IAEA,MAAM,UAAU,CAAC;QACf,MAAM,QAAQ,IAAI;QAClB,OACE,KAAK,OAAO,OAAO,MAAM,OAAO,MAChC,KAAK,QAAQ,OAAO,MAAM,QAAQ,MAClC,KAAK,WAAW,OAAO,MAAM,WAAW;IAE5C;IAEA,MAAM,qBAAqB,eAAe,iBAAiB,gBAAgB,EAAE;IAE7E,qBACE,4TAAC;QAAI,WAAU;;0BACb,4TAAC;gBAAI,WAAU;;kCACb,4TAAC;;0CACC,4TAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,4TAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAEvC,4TAAC;wBAAI,WAAU;kCACb,cAAA,4TAAC,wIAAM;4BAAC,OAAO;4BAAM,eAAe,CAAC,QAAe,QAAQ;;8CAC1D,4TAAC,+IAAa;oCAAC,WAAU;8CACvB,cAAA,4TAAC,6IAAW;;;;;;;;;;8CAEd,4TAAC,+IAAa;;sDACZ,4TAAC,4IAAU;4CAAC,OAAM;sDAAQ;;;;;;sDAC1B,4TAAC,4IAAU;4CAAC,OAAM;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAMhC,SAAS,wBACR,4TAAC;gBAAI,WAAU;;kCACb,4TAAC,oIAAI;wBAAC,WAAU;;0CACd,4TAAC,0IAAU;0CACT,cAAA,4TAAC;oCAAI,WAAU;;sDACb,4TAAC,yIAAS;4CAAC,WAAU;;gDAClB,MAAM,CAAC,YAAY,QAAQ,GAAG;gDAAC;gDAAE,YAAY,WAAW;;;;;;;sDAE3D,4TAAC;4CAAI,WAAU;;8DACb,4TAAC,wIAAM;oDAAC,SAAQ;oDAAU,MAAK;oDAAO,SAAS,IAAM,cAAc;8DACjE,cAAA,4TAAC,0TAAW;wDAAC,WAAU;;;;;;;;;;;8DAEzB,4TAAC,wIAAM;oDAAC,SAAQ;oDAAU,MAAK;oDAAK,SAAS,IAAM,eAAe,IAAI;8DAAS;;;;;;8DAG/E,4TAAC,wIAAM;oDAAC,SAAQ;oDAAU,MAAK;oDAAO,SAAS,IAAM,cAAc;8DACjE,cAAA,4TAAC,6TAAY;wDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;0CAKhC,4TAAC,2IAAW;0CACV,cAAA,4TAAC;oCAAI,WAAU;;wCACZ;4CAAC;4CAAO;4CAAO;4CAAO;4CAAO;4CAAO;4CAAO;yCAAM,CAAC,GAAG,CAAC,CAAC,oBACtD,4TAAC;gDAAc,WAAU;0DACtB;+CADO;;;;;wCAIX,eAAe,aAAa,GAAG,CAAC,CAAC,MAAM;4CACtC,IAAI,CAAC,MAAM;gDACT,qBAAO,4TAAC;oDAA2B,WAAU;mDAA5B,CAAC,MAAM,EAAE,OAAO;;;;;4CACnC;4CAEA,MAAM,SAAS,iBAAiB;4CAChC,MAAM,aACJ,gBACA,KAAK,OAAO,OAAO,aAAa,OAAO,MACvC,KAAK,QAAQ,OAAO,aAAa,QAAQ,MACzC,KAAK,WAAW,OAAO,aAAa,WAAW;4CAEjD,qBACE,4TAAC;gDAEC,SAAS,IAAM,gBAAgB;gDAC/B,WAAW,IAAA,qHAAE,EACX,mFACA,mBACA,QAAQ,SAAS,mDACjB,cAAc;;kEAGhB,4TAAC;wDAAK,WAAW,IAAA,qHAAE,EAAC,QAAQ,QAAQ,SAAS;kEAAkB,KAAK,OAAO;;;;;;kEAC3E,4TAAC;wDAAI,WAAU;;4DACZ,OAAO,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,sBACvB,4TAAC;oEAAmB,WAAW,IAAA,qHAAE,EAAC,4BAA4B,cAAc,MAAM,IAAI;mEAA5E,MAAM,EAAE;;;;;4DAEnB,OAAO,MAAM,GAAG,mBACf,4TAAC;gEAAK,WAAU;;oEAAgC;oEAAE,OAAO,MAAM,GAAG;;;;;;;;;;;;;;+CAfjE,KAAK,WAAW;;;;;wCAoB3B;;;;;;;;;;;;;;;;;;kCAKN,4TAAC,oIAAI;;0CACH,4TAAC,0IAAU;0CACT,cAAA,4TAAC,yIAAS;8CACP,eACG,aAAa,kBAAkB,CAAC,SAAS;wCAAE,OAAO;wCAAQ,KAAK;wCAAW,MAAM;oCAAU,KAC1F;;;;;;;;;;;0CAGR,4TAAC,2IAAW;0CACT,mBAAmB,MAAM,KAAK,kBAC7B,4TAAC;oCAAE,WAAU;8CAAgC;;;;;yDAE7C,4TAAC;oCAAI,WAAU;8CACZ,mBAAmB,GAAG,CAAC,CAAC,sBACvB,4TAAC;4CAAmB,WAAU;;8DAC5B,4TAAC;oDAAI,WAAU;;sEACb,4TAAC;4DAAI,WAAW,IAAA,qHAAE,EAAC,wBAAwB,cAAc,MAAM,IAAI;;;;;;sEACnE,4TAAC;4DAAG,WAAU;sEAAyB,MAAM,KAAK;;;;;;;;;;;;gDAEnD,MAAM,WAAW,kBAAI,4TAAC;oDAAE,WAAU;8DAAsC,MAAM,WAAW;;;;;;8DAC1F,4TAAC,sIAAK;oDAAC,SAAQ;oDAAY,WAAU;8DAClC,MAAM,IAAI;;;;;;;2CAPL,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;qCAiB9B,4TAAC,oIAAI;;kCACH,4TAAC,0IAAU;kCACT,cAAA,4TAAC;4BAAI,WAAU;;8CACb,4TAAC,yIAAS;oCAAC,WAAU;8CAAY,YAAY,WAAW;;;;;;8CACxD,4TAAC;oCAAI,WAAU;;sDACb,4TAAC,wIAAM;4CAAC,SAAQ;4CAAU,MAAK;4CAAO,SAAS,IAAM,aAAa;sDAChE,cAAA,4TAAC,0TAAW;gDAAC,WAAU;;;;;;;;;;;sDAEzB,4TAAC,wIAAM;4CAAC,SAAQ;4CAAU,MAAK;4CAAK,SAAS,IAAM,eAAe,IAAI;sDAAS;;;;;;sDAG/E,4TAAC,wIAAM;4CAAC,SAAQ;4CAAU,MAAK;4CAAO,SAAS,IAAM,aAAa;sDAChE,cAAA,4TAAC,6TAAY;gDAAC,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;kCAKhC,4TAAC,2IAAW;kCACV,cAAA,4TAAC;4BAAI,WAAU;sCACZ,OAAO,GAAG,CAAC,CAAC,OAAO;gCAClB,MAAM,YAAY,IAAI,KAAK,YAAY,WAAW,IAAI,OAAO;gCAC7D,MAAM,cAAc,4IAAkB,CAAC,MAAM,CAAC,CAAC;oCAC7C,MAAM,YAAY,IAAI,KAAK,MAAM,IAAI;oCACrC,OAAO,UAAU,QAAQ,OAAO,SAAS,UAAU,WAAW,OAAO,YAAY,WAAW;gCAC9F;gCAEA,qBACE,4TAAC;oCAEC,SAAS;wCACP,eAAe;wCACf,QAAQ;oCACV;oCACA,WAAU;;sDAEV,4TAAC;4CAAG,WAAU;sDAAsB;;;;;;sDACpC,4TAAC;4CAAI,WAAU;;gDACZ,YAAY,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,sBAC5B,4TAAC;wDAAmB,WAAU;;0EAC5B,4TAAC;gEAAI,WAAW,IAAA,qHAAE,EAAC,4BAA4B,cAAc,MAAM,IAAI;;;;;;0EACvE,4TAAC;gEAAK,WAAU;0EAA0C,MAAM,KAAK;;;;;;;uDAF7D,MAAM,EAAE;;;;;gDAKnB,YAAY,MAAM,GAAG,mBACpB,4TAAC;oDAAK,WAAU;;wDAAgC;wDAAE,YAAY,MAAM,GAAG;wDAAE;;;;;;;gDAE1E,YAAY,MAAM,KAAK,mBAAK,4TAAC;oDAAK,WAAU;8DAAgC;;;;;;;;;;;;;mCAlB1E;;;;;4BAsBX;;;;;;;;;;;;;;;;;0BAMR,4TAAC,oIAAI;;kCACH,4TAAC,0IAAU;kCACT,cAAA,4TAAC,yIAAS;4BAAC,WAAU;;8CACnB,4TAAC,qTAAY;oCAAC,WAAU;;;;;;gCAAY;;;;;;;;;;;;kCAIxC,4TAAC,2IAAW;kCACV,cAAA,4TAAC;4BAAI,WAAU;;8CACb,4TAAC;oCAAI,WAAU;;sDACb,4TAAC;4CAAI,WAAU;;;;;;sDACf,4TAAC;4CAAK,WAAU;sDAAU;;;;;;;;;;;;8CAE5B,4TAAC;oCAAI,WAAU;;sDACb,4TAAC;4CAAI,WAAU;;;;;;sDACf,4TAAC;4CAAK,WAAU;sDAAU;;;;;;;;;;;;8CAE5B,4TAAC;oCAAI,WAAU;;sDACb,4TAAC;4CAAI,WAAU;;;;;;sDACf,4TAAC;4CAAK,WAAU;sDAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC;GAxSwB;KAAA","debugId":null}}]
}